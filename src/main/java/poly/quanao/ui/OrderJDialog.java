/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package poly.quanao.ui;

import java.awt.Frame;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import lombok.Setter;
import poly.quanao.dao.OrderDAO;
import poly.quanao.dao.OrderDetailDAO;
import poly.quanao.dao.impl.OrderDAOImpl;
import poly.quanao.dao.impl.OrderDetailDAOImpl;
import poly.quanao.entity.Order;
import poly.quanao.entity.OrderDetail;
import poly.quanao.util.XAuth;
import poly.quanao.util.XDate;
import poly.quanao.util.XDialog;

/**
 *
 * @author ADMIN
 */
public final class OrderJDialog extends javax.swing.JDialog implements OrderController {

    /**
     * Creates new form OrderJDialog
     * @param parent
     * @param modal
     */
    public OrderJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        fillOrderDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrderDetails = new javax.swing.JTable();
        btnCancel = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnCheckout = new javax.swing.JButton();
        txtCheckin = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txtUsername = new javax.swing.JTextField();
        txtStatus = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtCheckout = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Order");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel7.setText("Trạng thái");

        jLabel3.setText("Thời điểm đặt hàng");

        jLabel8.setText("Nhân viên");

        jLabel9.setText("Thời điểm thanh toán");

        tblOrderDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "Mã phiếu", "Quần áo", "Đơn giá", "Giảm giá", "Số lượng ", "Thành tiền", "Màu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblOrderDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOrderDetailsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblOrderDetails);

        btnCancel.setText("Hủy phiếu");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnAdd.setText("Thêm quần áo");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setText("Xóa quần áo");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnCheckout.setText("Thanh toán");
        btnCheckout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckoutActionPerformed(evt);
            }
        });

        jButton1.setText("Đóng");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Mã phiếu");

        btnNew.setText("Đơn hàng mới");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(txtCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRemove)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnNew)
                                .addGap(29, 29, 29)
                                .addComponent(btnCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(297, 297, 297)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 81, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCheckin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCheckout, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblOrderDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrderDetailsMouseClicked
        if (evt.getClickCount() == 2) {
            this.updateQuantity();
        }
    }//GEN-LAST:event_tblOrderDetailsMouseClicked

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
      this.cancel();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        this.showProductsJDialog();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
     this.removeProduct();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnCheckoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckoutActionPerformed
     this.checkout();
    }//GEN-LAST:event_btnCheckoutActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
         this.open();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        this.close();
    }//GEN-LAST:event_formWindowClosed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        createNewOrder();
    }//GEN-LAST:event_btnNewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                OrderJDialog dialog = new OrderJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCheckout;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOrderDetails;
    private javax.swing.JTextField txtCheckin;
    private javax.swing.JTextField txtCheckout;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
    @Setter Order order;
    OrderDetailDAO orderDetailDao = new OrderDetailDAOImpl();
    OrderDAO orderDao= new OrderDAOImpl();
    List<OrderDetail> orderDetails = List.of();



// Mở form
@Override
public void open() {
    this.setLocationRelativeTo(null);
    if (this.order == null) {
        this.order = new Order(); // Tạo đơn mới nếu chưa có
    }
    this.setForm(order);         // Hiển thị thông tin đơn
    this.fillOrderDetails();     // Hiển thị chi tiết đơn hàng
}


// Đóng form: nếu đơn hàng rỗng thì xóa
@Override
public void close() {
    if (order != null && orderDetails.isEmpty()) {
        orderDao.deleteById(order.getOrderId());
    }
}


// Mở form chọn sản phẩm để thêm vào hóa đơn
@Override
public void showProductsJDialog() {
    ProductsJDialog dialog = new ProductsJDialog((Frame) this.getOwner(), true);
    dialog.setOrder(order); // Gán hóa đơn hiện tại
    dialog.setVisible(true);

    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosed(java.awt.event.WindowEvent e) {
            fillOrderDetails(); // Cập nhật lại bảng chi tiết sau khi đóng
        }
    });
}


// Xóa sản phẩm được chọn trong bảng
@Override
public void removeProduct() {
    for (int i = 0; i < tblOrderDetails.getRowCount(); i++) {
        Boolean checked = (Boolean) tblOrderDetails.getValueAt(i, 0);
        if (checked) {
            orderDetailDao.deleteById(orderDetails.get(i).getOrderDetailId());
        }
    }
    fillOrderDetails();
}

// Cập nhật số lượng sản phẩm
@Override
public void updateQuantity() {
    if (order.getStatus() == 0) {
        String input = XDialog.prompt("Số lượng mới?");
        if (input != null && !input.isBlank()) {
            try {
                int quantity = Integer.parseInt(input);
                if (quantity > 0) {
                    OrderDetail detail = orderDetails.get(tblOrderDetails.getSelectedRow());
                    detail.setQuantity(quantity);
                    orderDetailDao.update(detail);
                    fillOrderDetails();
                } else {
                    XDialog.alert("Số lượng phải lớn hơn 0.");
                }
            } catch (NumberFormatException e) {
                XDialog.alert("Vui lòng nhập số nguyên hợp lệ.");
            }
        }
    }
}


// Hủy đơn hàng
@Override
public void cancel() {
    if (orderDetails.isEmpty()) {
        orderDao.deleteById(order.getOrderId());
        this.dispose();
    } else if (XDialog.confirm("Bạn muốn hủy phiếu bán hàng?")) {
        order.setStatus(Order.Status.Canceled.ordinal());
        orderDao.update(order);
        setForm(order);
    }
}


// Hiển thị các chi tiết đơn hàng vào bảng
@Override
public void fillOrderDetails() {
    DefaultTableModel model = (DefaultTableModel) tblOrderDetails.getModel();
    model.setRowCount(0);
    orderDetails = List.of();

    String idText = txtId.getText().trim();
    if (!idText.isEmpty() && !idText.equalsIgnoreCase("null")) {
        try {
            Long orderId = Long.parseLong(idText);
            orderDetails = orderDetailDao.findByOrderId(orderId);
        } catch (NumberFormatException e) {
            System.err.println("⚠️ Không thể chuyển ID đơn hàng thành số: " + idText);
        }
    }

    for (OrderDetail d : orderDetails) {
        double amount = d.getUnitPrice() * d.getQuantity() * (1 - d.getDiscount());
        Object[] rowData = {
            false,
            d.getOrderId(),
            d.getProductName(),
            String.format("%.1f VNĐ", d.getUnitPrice()),
            String.format("%.0f%%", d.getDiscount() * 100),
            d.getQuantity(),
            String.format("%.1f VNĐ", amount)
        };
        model.addRow(rowData);
    }
}


// Thanh toán đơn hàng
@Override
public void checkout() {
    if (XDialog.confirm("Bạn muốn thanh toán phiếu bán hàng?")) {
        order.setStatus(Order.Status.Completed.ordinal());
        order.setCheckout(new Date());
        orderDao.update(order);
        setForm(order); // Cập nhật lại trạng thái
    }
}


// Hiển thị thông tin đơn hàng lên form
private void setForm(Order order) {
    if (order == null) {
        System.err.println("⚠️ setForm: Order truyền vào bị null!");
        return;
    }

    txtId.setText(String.valueOf(order.getOrderId()));
    txtCheckin.setText(XDate.format(order.getCheckin(), "HH:mm:ss dd-MM-yyyy"));
    txtUsername.setText(order.getUsername());

    String[] statuses = {"Servicing", "Completed", "Canceled"};
    txtStatus.setText(statuses[order.getStatus()]);

    if (order.getCheckout() != null) {
        txtCheckout.setText(XDate.format(order.getCheckout(), "HH:mm:ss dd-MM-yyyy"));
    }

    boolean editable = (order.getStatus() == 0);
    btnAdd.setEnabled(editable);
    btnCancel.setEnabled(editable);
    btnCheckout.setEnabled(editable);
    btnRemove.setEnabled(editable);
}

    @Override
public void createNewOrder() {
    order = new Order();
    order.setUsername(XAuth.user.getUsername());
    order.setCheckin(new Date());
    order.setStatus(0);

    Long newOrderId = new OrderDAOImpl().createAndReturnId(order);
    order.setOrderId(newOrderId);

    txtId.setText(String.valueOf(newOrderId));
    XDialog.alert("Đã tạo đơn hàng mới!");
}
}
